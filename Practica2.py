#Edwing Alexis Casillas Valencia.	Registro: 19110113.	Grupo:7E

import os
import numpy as np
import cv2
from matplotlib import pyplot as plt
import matplotlib.image as img

R=1
nombre='E'

while(R==1):
    ini=str(input('Presiona la primer letra de tu nombre para comenzar \n'))
    iniup=ini.upper()
    if(iniup==nombre):
        im1=cv2.imread('AoT.png')
        im2=cv2.imread('R&M.png')
        #imagen1 = cv2.imread('AoT.png',1)
        #imagen2 = cv2.imread('R&M.png',1)
        imagen1=cv2.cvtColor(im1,cv2.COLOR_BGR2RGB)
        imagen2=cv2.cvtColor(im2,cv2.COLOR_BGR2RGB)
        #cv2.waitKey(0)
        #cv2.destroyAllWindows()
        ############################################################# suma ##############################
        suma1=cv2.add(imagen1,imagen2)
        #cv2.imshow("Suma",suma1)
        #cv2.imwrite("Suma_Shingeki_R&M.png",suma1)
        '''
        fig, axarr = plt.subplots(1,3)
        axarr[0].imshow(imagen1)
        axarr[0].set_title('Imagen 1')
        axarr[1].imshow(suma1)
        axarr[1].set_title('Suma add()')
        axarr[2].imshow(imagen2)
        axarr[2].set_title('Imagen 2')
        plt.show()
        '''
        fig1=plt.figure(figsize=(13,3))
        s1=fig1.add_subplot(1,3,1)
        s1.set_title('Imagen 1')
        s1.imshow(imagen1)
        s2=fig1.add_subplot(1,3,2)
        s2.set_title('Suma add()')
        s2.imshow(suma1)
        s3=fig1.add_subplot(1,3,3)
        s3.set_title('Imagen 2')
        s3.imshow(imagen2)
        plt.show()

        suma2=imagen1 + imagen2
        fig2=plt.figure(figsize=(13,3))
        s1_1=fig2.add_subplot(1,3,1)
        s1_1.set_title('Imagen 1')
        s1_1.imshow(imagen1)
        s2_1=fig2.add_subplot(1,3,2)
        s2_1.set_title('Suma manual')
        s2_1.imshow(suma2)
        s3_1=fig2.add_subplot(1,3,3)
        s3_1.set_title('Imagen 2')
        s3_1.imshow(imagen2)
        plt.show()

        suma3=cv2.addWeighted(imagen1,0.3,imagen2,0.7,0)
        fig3=plt.figure(figsize=(13,3))
        s1_2=fig3.add_subplot(1,3,1)
        s1_2.set_title('Imagen 1')
        s1_2.imshow(imagen1)
        s2_2=fig3.add_subplot(1,3,2)
        s2_2.set_title('Suma addWeighted()')
        s2_2.imshow(suma3)
        s3_2=fig3.add_subplot(1,3,3)
        s3_2.set_title('Imagen 2')
        s3_2.imshow(imagen2)
        plt.show()


        ######################################################## resta
        resta1=cv2.subtract(imagen1,imagen2)
        #cv2.imshow("Resta",resta1)
        #cv2.imwrite("Resta_Shingeki_R&M.png",resta1)
        fig4=plt.figure(figsize=(13,3))
        r1_1=fig4.add_subplot(1,3,1)
        r1_1.set_title('Imagen 1')
        r1_1.imshow(imagen1)
        r2_1=fig4.add_subplot(1,3,2)
        r2_1.set_title('Resta subtract()')
        r2_1.imshow(resta1)
        r3_1=fig4.add_subplot(1,3,3)
        r3_1.set_title('Imagen 2')
        r3_1.imshow(imagen2)
        plt.show()

        resta2=cv2.absdiff(imagen1,imagen2)
        fig5=plt.figure(figsize=(13,3))
        r1_2=fig5.add_subplot(1,3,1)
        r1_2.set_title('Imagen 1')
        r1_2.imshow(imagen1)
        r2_2=fig5.add_subplot(1,3,2)
        r2_2.set_title('Resta absdiff()')
        r2_2.imshow(resta2)
        r3_2=fig5.add_subplot(1,3,3)
        r3_2.set_title('Imagen 2')
        r3_2.imshow(imagen2)
        plt.show()

        resta3=imagen1-imagen2
        fig6=plt.figure(figsize=(13,3))
        r1_3=fig6.add_subplot(1,3,1)
        r1_3.set_title('Imagen 1')
        r1_3.imshow(imagen1)
        r2_3=fig6.add_subplot(1,3,2)
        r2_3.set_title('Resta manual')
        r2_3.imshow(resta3)
        r3_3=fig6.add_subplot(1,3,3)
        r3_3.set_title('Imagen 2')
        r3_3.imshow(imagen2)
        plt.show()
        ###################################################### multiplicación
        mul1=cv2.multiply(imagen1,imagen2)
        #cv2.imshow("Multiplicación",mul1)
        #cv2.imwrite("Multiplicación_Shingeki_R&M.png",mul1)
        fig7=plt.figure(figsize=(13,3))
        m1_1=fig7.add_subplot(1,3,1)
        m1_1.set_title('Imagen 1')
        m1_1.imshow(imagen1)
        m2_1=fig7.add_subplot(1,3,2)
        m2_1.set_title('Multiplicacion multiply()')
        m2_1.imshow(mul1)
        m3_1=fig7.add_subplot(1,3,3)
        m3_1.set_title('Imagen 2')
        m3_1.imshow(imagen2)
        plt.show()

        mul2=imagen1*imagen2
        fig8=plt.figure(figsize=(13,3))
        m1_2=fig8.add_subplot(1,3,1)
        m1_2.set_title('Imagen 1')
        m1_2.imshow(imagen1)
        m2_2=fig8.add_subplot(1,3,2)
        m2_2.set_title('Multiplicacion manual')
        m2_2.imshow(mul2)
        m3_2=fig8.add_subplot(1,3,3)
        m3_2.set_title('Imagen 2')
        m3_2.imshow(imagen2)
        plt.show()

        '''
        mul3
        fig9=plt.figure(figsize=(13,3))
        m1_3=fig9.add_subplot(1,3,1)
        m1_3.set_title('Imagen 1')
        m1_3.imshow(imagen1)
        m2_3=fig9.add_subplot(1,3,2)
        m2_3.set_title('Multiplicacion multiply()')
        m2_3.imshow(mul1)
        m3_3=fig9.add_subplot(1,3,3)
        m3_3.set_title('Imagen 2')
        m3_3.imshow(imagen2)
        plt.show()
        '''
        ###################################################### división
        div1=cv2.divide(imagen1,imagen2)
        #cv2.imshow("División",div1)
        #cv2.imwrite("División_Shingeki_R&M.png",div1)
        fig10=plt.figure(figsize=(13,3))
        d1_1=fig10.add_subplot(1,3,1)
        d1_1.set_title('Imagen 1')
        d1_1.imshow(imagen1)
        d2_1=fig10.add_subplot(1,3,2)
        d2_1.set_title('Division divide()')
        d2_1.imshow(div1)
        d3_1=fig10.add_subplot(1,3,3)
        d3_1.set_title('Imagen 2')
        d3_1.imshow(imagen2)
        plt.show()

        with np.errstate(divide='ignore'):
            div2=imagen1/imagen2
        fig11=plt.figure(figsize=(13,3))
        d1_2=fig11.add_subplot(1,3,1)
        d1_2.set_title('Imagen 1')
        d1_2.imshow(imagen1)
        d2_2=fig11.add_subplot(1,3,2)
        d2_2.set_title('Division manual')
        d2_2.imshow(div2)
        d3_2=fig11.add_subplot(1,3,3)
        d3_2.set_title('Imagen 2')
        d3_2.imshow(imagen2)
        plt.show()

        #div3
        ##################################################### logaritmo
        #log1=cv2.log(imagen1)
        c=255/np.log(1+np.max(imagen1))
        log1=c*(np.log(imagen1 + 1))
        log1=np.array(log1,dtype=np.uint8)
        c=255/np.log(1+np.max(imagen2))
        log2=c*(np.log(imagen2 + 1))
        log2=np.array(log2,dtype=np.uint8)
        loga1=cv2.addWeighted(log1,0.5,log2,0.5,0)
        fig13=plt.figure(figsize=(13,3))
        l1_1=fig13.add_subplot(1,3,1)
        l1_1.set_title('Imagen 1')
        l1_1.imshow(imagen1)
        l2_1=fig13.add_subplot(1,3,2)
        l2_1.set_title('Logaritmo')
        l2_1.imshow(loga1)
        l3_1=fig13.add_subplot(1,3,3)
        l3_1.set_title('Imagen 2')
        l3_1.imshow(imagen2)
        plt.show()
        #cv2.imshow("Logaritmo",log1)
        #cv2.imwrite("Log_Shingeki_R&M.png",log1)

        ##################################################### potencia
        pot1=cv2.pow(imagen1,2)
        #cv2.imshow("Potencia",pot1)
        #cv2.imwrite("Potencia_Shinggeki_R&M.png",pot1)
        fig16=plt.figure(figsize=(13,3))
        p1_1=fig16.add_subplot(1,3,1)
        p1_1.set_title('Imagen 1')
        p1_1.imshow(imagen1)
        p2_1=fig16.add_subplot(1,3,2)
        p2_1.set_title('Potencia pow()')
        p2_1.imshow(pot1)
        p3_1=fig16.add_subplot(1,3,3)
        p3_1.set_title('Imagen 2')
        p3_1.imshow(imagen2)
        plt.show()

        #################################################### raiz cuadrada
        '''
        raiz1=cv2.sqrt(imagen1)
        #cv2.imshow("Raiz cuadrada",raiz1)
        #cv2.imwrite("Raíz_Shingeki_R&M.png",raiz1)
        fig19=plt.figure(figsize=(13,3))
        root1_1=fig19.add_subplot(1,3,1)
        root1_1.set_title('Imagen 1')
        root1_1.imshow(imagen1)
        root2_1=fig19.add_subplot(1,3,2)
        root2_1.set_title('Raiz sqrt()')
        root2_1.imshow(raiz1)
        root3_1=fig19.add_subplot(1,3,3)
        root3_1.set_title('Imagen 2')
        root3_1.imshow(imagen2)
        plt.show()

        raiz2=cv2.pow(imagen1,0.5)
        fig20=plt.figure(figsize=(13,3))
        root1_2=fig20.add_subplot(1,3,1)
        root1_2.set_title('Imagen 1')
        root1_2.imshow(imagen1)
        root2_2=fig20.add_subplot(1,3,2)
        root2_2.set_title('Raiz pow()')
        root2_2.imshow(raiz2)
        root3_2=fig20.add_subplot(1,3,3)
        root3_2.set_title('Imagen 2')
        root3_2.imshow(imagen2)
        plt.show()
        '''

        sqrt1=imagen1**(0.5)
        sqrt2=imagen2**(0.5)
        #sqrt2=np.concatenate((imagen1,sqrt21,sqrt22,imagen2),axis=1)
        fig19=plt.figure(figsize=(13,3))
        root1_1=fig19.add_subplot(1,4,1)
        root1_1.set_title('Imagen 1')
        root1_1.imshow(imagen1)
        root2_1=fig19.add_subplot(1,4,2)
        root2_1.set_title('Raiz manual 1')
        root2_1.imshow(sqrt1)
        root3_1=fig19.add_subplot(1,4,3)
        root3_1.set_title('Raiz manual 2')
        root3_1.imshow(sqrt2)
        root4_1=fig19.add_subplot(1,4,4)
        root4_1.set_title('Imagen 2')
        root4_1.imshow(imagen2)
        plt.show()

        sqrt3=np.sqrt(imagen1)
        sqrt3 = np.asarray(sqrt3, dtype="uint8")
        sqrt4=np.sqrt(imagen2)
        sqrt4 = np.asarray(sqrt4, dtype="uint8")
        #sqrt3=np.concatenate((imagen1,sqrt31,sqrt32,imagen2),axis=1)
        fig20=plt.figure(figsize=(13,3))
        root1_2=fig20.add_subplot(1,4,1)
        root1_2.set_title('Imagen 1')
        root1_2.imshow(imagen1)
        root2_2=fig20.add_subplot(1,4,2)
        root2_2.set_title('Raiz np.sqrt() 1')
        root2_2.imshow(sqrt3)
        root2_2=fig20.add_subplot(1,4,3)
        root2_2.set_title('Raiz np.sqrt() 2')
        root2_2.imshow(sqrt4)
        root4_2=fig20.add_subplot(1,4,4)
        root4_2.set_title('Imagen 2')
        root4_2.imshow(imagen2)
        plt.show()
        #################################################### derivada
        der1=cv2.Sobel(imagen1,ddepth=cv2.CV_64F, dx=1, dy=1, ksize=5)
        #cv2.imwrite("Derivada1.png",der1)
        der2=cv2.Sobel(imagen2,ddepth=cv2.CV_64F, dx=1, dy=1, ksize=5)
        #cv2.imwrite("Derivada2.png",der2)
        fig22=plt.figure(figsize=(13,3))
        deri1=fig22.add_subplot(1,4,1)
        deri1.set_title('Imagen 2')
        deri1.imshow(imagen1)
        deri2=fig22.add_subplot(1,4,2)
        deri2.set_title('Derivada Sobel 1')
        deri2.imshow(der1)
        deri3=fig22.add_subplot(1,4,3)
        deri3.set_title('Derivada Sobel 2')
        deri3.imshow(der2)
        deri4=fig22.add_subplot(1,4,4)
        deri4.set_title('Imagen 2')
        deri4.imshow(imagen2)
        plt.show()
        ###################################################### conjunción
        conj1=cv2.bitwise_and(imagen1,imagen2)
        #cv2.imshow("Conjunción",conj1)
        #cv2.imwrite("Conjunción_Shingeki_R&M.png",conj1)
        fig25=plt.figure(figsize=(13,3))
        conj1_1=fig25.add_subplot(1,3,1)
        conj1_1.set_title('Imagen 1')
        conj1_1.imshow(imagen1)
        conj2_1=fig25.add_subplot(1,3,2)
        conj2_1.set_title('Conjuncion bitwise_and()')
        conj2_1.imshow(conj1)
        conj3_1=fig25.add_subplot(1,3,3)
        conj3_1.set_title('Imagen 2')
        conj3_1.imshow(imagen2)
        plt.show()
        ##################################################### disyunción
        disy1=cv2.bitwise_or(imagen1,imagen2)
        #cv2.imshow("Disyunción",disy1)
        #cv2.imwrite("Disyunción_Shingeki_R&M.png",disy1)
        fig28=plt.figure(figsize=(13,3))
        disy1_1=fig28.add_subplot(1,3,1)
        disy1_1.set_title('Imagen 1')
        disy1_1.imshow(imagen1)
        disy2_1=fig28.add_subplot(1,3,2)
        disy2_1.set_title('Disyuncion bitwise_or()')
        disy2_1.imshow(disy1)
        disy3_1=fig28.add_subplot(1,3,3)
        disy3_1.set_title('Imagen 2')
        disy3_1.imshow(imagen2)
        plt.show()
        ####################################################### negación
        not1=cv2.bitwise_not(imagen1)
        #cv2.imshow("Negación",not1)
        #cv2.imwrite("Negación_Shingeki_R&M.png",not1)
        fig31=plt.figure(figsize=(13,3))
        not1_1=fig31.add_subplot(1,3,1)
        not1_1.set_title('Imagen 1')
        not1_1.imshow(imagen1)
        not2_1=fig31.add_subplot(1,3,2)
        not2_1.set_title('Negacion bitwise_not()')
        not2_1.imshow(not1)
        not3_1=fig31.add_subplot(1,3,3)
        not3_1.set_title('Imagen 2')
        not3_1.imshow(imagen2)
        plt.show()

        ######################################################## traslación
        ancho=imagen1.shape[1]
        alto=imagen1.shape[0]
        M2=np.float32([[1,0,100],[0,1,150]])
        tra1=cv2.warpAffine(imagen1,M2,(ancho,alto))
        #cv2.imshow('Traslación',tra)
        #cv2.imwrite('tra_Shingeki_R&M.png',tra)
        fig34=plt.figure(figsize=(13,3))
        tra1_1=fig34.add_subplot(1,3,1)
        tra1_1.set_title('Imagen 1')
        tra1_1.imshow(imagen1)
        tra2_1=fig34.add_subplot(1,3,2)
        tra2_1.set_title('Traslacion')
        tra2_1.imshow(tra1)
        tra3_1=fig34.add_subplot(1,3,3)
        tra3_1.set_title('Imagen 2')
        tra3_1.imshow(imagen2)
        plt.show()

        ####################################################### escalado
        scale_percent=50        #Porcentaje en el que se redimencionala imagen
		#calculo de dimensiones deseada
        width=int(imagen1.shape[1]*scale_percent/100)
        height=int(imagen1.shape[0]*scale_percent/100)
		#tamaño
        dsize=(width,height)
		#cambiar el tamaño de la imagen
        output=cv2.resize(imagen1,dsize)
        cv2.imwrite("Escalado_Shingeki_R&M.png",output)
        #cv2.imshow("Escalado",output)
        fig37=plt.figure(figsize=(13,3))
        esc1_1=fig37.add_subplot(1,3,1)
        esc1_1.set_title('Imagen 1')
        esc1_1.imshow(imagen1)
        esc2_1=fig37.add_subplot(1,3,2)
        esc2_1.set_title('Escalado')
        esc2_1.imshow(output)
        esc3_1=fig37.add_subplot(1,3,3)
        esc3_1.set_title('Imagen 2')
        esc3_1.imshow(imagen2)
        plt.show()

        ####################################################### rotación
        #ancho=imagen1.shape[1]
        #alto=imagen1.shape[0]
        rot1=cv2.getRotationMatrix2D((ancho//2,alto//2),15,1)
        rot=cv2.warpAffine(imagen1,rot1,(ancho,alto))
        #cv2.imshow('Rotación',rot)
        #cv2.imwrite('Rotación_Shingeki_R&M.png',rot)
        fig40=plt.figure(figsize=(13,3))
        rot1_1=fig40.add_subplot(1,3,1)
        rot1_1.set_title('Imagen 1')
        rot1_1.imshow(imagen1)
        rot2_1=fig40.add_subplot(1,3,2)
        rot2_1.set_title('Rotacion')
        rot2_1.imshow(rot)
        rot3_1=fig40.add_subplot(1,3,3)
        rot3_1.set_title('Imagen 2')
        rot3_1.imshow(imagen2)
        plt.show()

        ########################################################## traslación a fin
        pts1=np.float32([[100,400],[400,100],[100,100]])
        pts2=np.float32([[50,300],[400,200],[80,150]])
        M3=cv2.getAffineTransform(pts1,pts2)
        traf=cv2.warpAffine(imagen1,M3,(alto,ancho))
        #cv2.imshow("Traslación afín",traf)
        #cv2.imwrite('traf_Shingeki_R&M.png',traf)
        fig43=plt.figure(figsize=(13,3))
        traf1_1=fig43.add_subplot(1,3,1)
        traf1_1.set_title('Imagen 1')
        traf1_1.imshow(imagen1)
        traf2_1=fig43.add_subplot(1,3,2)
        traf2_1.set_title('Traslaciona afin')
        traf2_1.imshow(traf)
        traf3_1=fig43.add_subplot(1,3,3)
        traf3_1.set_title('Imagen 2')
        traf3_1.imshow(imagen2)
        plt.show()

        ########################################################### transpuesta
        #transp=np.transpose(imagen1)
        #cv2.imshow('Transpuesta',transp)
        #cv2.imwrite('transp_Shingeki_R&M.png',transp)
        '''
        transp2=1/imagen1
        fig47=plt.figure(figsize=(13,3))
        transp1_2=fig47.add_subplot(1,3,1)
        transp1_2.set_title('Imagen 1')
        transp1_2.imshow(imagen1)
        transp2_2=fig47.add_subplot(1,3,2)
        transp2_2.set_title('Transpuesta')
        transp2_2.imshow(transp2)
        transp3_2=fig47.add_subplot(1,3,3)
        transp3_2.set_title('Imagen 2')
        transp3_2.imshow(imagen2)
        plt.show()
        '''
        trans=cv2.getRotationMatrix2D((ancho/2,alto/2),90,1)
        trans1=cv2.warpAffine(imagen1,trans,(ancho,alto))
        #cv2.imwrite('Transpuesta1.png',transp1_1)
        trans2=cv2.warpAffine(imagen2,trans,(ancho,alto))
        #cv2.imwrite('Transpuesta2.png',transp1_2)
        fig47=plt.figure(figsize=(13,3))
        transp1_2=fig47.add_subplot(1,4,1)
        transp1_2.set_title('Imagen 1')
        transp1_2.imshow(imagen1)
        transp2_2=fig47.add_subplot(1,4,2)
        transp2_2.set_title('Transpuesta 1')
        transp2_2.imshow(trans1)
        transp3_2=fig47.add_subplot(1,4,3)
        transp3_2.set_title('Transpuesta 2')
        transp3_2.imshow(trans2)
        transp4_2=fig47.add_subplot(1,4,4)
        transp4_2.set_title('Imagen 2')
        transp4_2.imshow(imagen2)
        plt.show()
        ########################################################### proyección
        pts3=np.float32([[200, 0],[350,0],[28,200],[350,210]])
        pts4=np.float32([[0,0],[480,0],[0,270],[480,270]])
        matriz=cv2.getPerspectiveTransform(pts3,pts4)
        proy=cv2.warpPerspective(imagen1,matriz,(480,270))
        #cv2.imshow('Proyeccion',proy)
        #cv2.imwrite('Proyeccion_Shingeki_R&M.png',proy)
        fig49=plt.figure(figsize=(13,3))
        proy1_1=fig49.add_subplot(1,3,1)
        proy1_1.set_title('Imagen 1')
        proy1_1.imshow(imagen1)
        proy2_1=fig49.add_subplot(1,3,2)
        proy2_1.set_title('Proyeccion')
        proy2_1.imshow(proy)
        proy3_1=fig49.add_subplot(1,3,3)
        proy3_1.set_title('Imagen 2')
        proy3_1.imshow(imagen2)
        plt.show()

    else:
        print("")

    R=int(input("Presione cualquier numero diferente de 1 para salir\n"))
    print("")

    if(R==1):
        os.system("cls")
    else:
        break
